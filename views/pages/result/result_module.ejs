<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- <link rel="stylesheet" href="/style/main.css"> -->
    <link rel="stylesheet" href="/style/card.css">
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/1.8.1/flowbite.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script src="/js/script.js"></script>
    <title>Survey page</title>
</head>

<style>
    .body {
        padding:12% 15%;
    }
    #pb {
        padding-top: 5%;
        padding-bottom: 5%;
    }
    .card {        
        background: #FFFFFF;
        border-radius: 25px;
        box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.5);
        }

    .m-result {
        width: 30%;
        padding: 3%;
        margin: 0% 3%;
    }

    #hrc {
        margin-bottom: -12%;
    }

    #tips {
        padding: 5%;
        margin: 4% 0%;
    }

    .more-details {
        padding-left: 5%;
        padding-right: 5%;
    }

</style>

<body>
    <!-- Navbar -->
    <header class="z-10">
        <%- include ('../../partials/nav.ejs') %>
    </header>
    <!-- Body -->
    <div class="body">
        <div id="top-buttons" class="horizontal-margin">
            <img id="print-button" src="/icons/print.svg" alt="Print page">
        </div>
        <!-- Module -->
        <div class="w-full mx-auto bg-white mt-10">
            <!-- Text -->
            <div class="textBox text-center">
                <p class="text-slate-900 text-4xl mb-2">Your <strong><%= module.name %></strong></p>
                <p class="text-slate-900 text-4xl">score is:</p>
            </div>
            <!-- Progress bar chart -->
            <div id="pb" class=""></div>
            <!-- Cards -->
            <div id="module-graphs" class="flex justify-center">
                <% for (q in scores.qScores) { %>
                    <!-- card -->
                    <div id="card-<%= q %>" class="card m-result text-center">
                        <!-- radial bar -->
                        <div id="rb-<%= q %>"></div>
                        <!-- heading -->
                        <p class="text-slate-900 text-1xl font-medium mx-auto"><%= scores.qScores[q].topic %></p>
                    </div>                    
                <% }; %>
                
            </div>
        </div>
    
        <!-- Desciption -->
        <div class="mt-16">
            <p class=""><%= scores.mScore.desc %></p>
        </div>

        <!-- Tips -->
        <div id="tips" class="card tips">
            <!-- heading -->
            <h2 class=""><span class="blue-text">Steps to Improve your </span><%= module.name %>:</h2>
            <!-- list of tips -->
            <ol class="list-decimal mt-5 ml-10">
                <% scores.mScore.improvements.split(';').forEach((li) => { %>
                    <li class="mt-5"><p><%= li %></p></li>                  
                <% }); %>                
            </ol>            
        </div>

        <!-- Question Details Dropdown -->
        <% for (q in scores.qScores) { %>
        <div class="q-details">
            <!-- Dropdown -->
            <div class="border-gray-200 border-b">
                <button data-collapse-toggle="more-details-<%= q %>" type="button" class="text-lg text-black font-medium inline-flex w-full justify-between py-6">
                    <!-- Question topic -->                    
                    <span class="inline-flex items-cente">
                        <span class="blue-text mr-2"><%= scores.qScores[q].topic %></span>                        
                    </span>
                    <!-- Dropdown button -->
                    <span class="">
                        <svg class="w-4 h-4" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/>
                        </svg>
                    </span>
                </button>
                <!-- Details -->
                <div id="more-details-<%= q %>" class="more-details pt-3 mt-3 space-y-2 hidden">
                    <div id="d2-pb"></div>
                    <p id="d2-desc"><%= scores.qScores[q].desc %></p>
                    <!-- Tips -->
                    <div id="tips" class="card tips">
                        <!-- heading -->
                        <h2 class=""><span class="blue-text">Steps to Improve your </span> <%= scores.qScores[q].topic %>:</h2>
                        <!-- list of tips -->
                        <ol class="list-decimal mt-5 ml-10">
                            <% scores.qScores[q].improvements.split(';').forEach((li) => { %>
                                <li class="mt-5"><p><%= li %></p></li>
                            <% }); %>
                        </ol>            
                    </div>
                </div>
              </div>
        </div>
        <% }; %>

        <!-- Implementation -->
        <div id="implementation" class="mt-16">
            <h2 class="blue-text">So What's Next?</h2>
            <div class="double-col mt-16">
                <div class="col w-1/3">
                    <span class="quote blue-text">"Action speaks louder than words"</span>
                </div>
                <div class="col w-2/3">
                    <h5>We are here to help you improve your business</h5>
                    <p class="mt-5">If you have questions about this assessment, want to develop a bespoke CE-MAP framework through our CIRCLE program or need support to implement assessment recommendations, please feel free to contact our CE research team. We're here to support your journey towards a more circular and sustainable future.</p>
                    <a href="#footer" id="contact-us" class="mt-5">Contact Us</a>
                </div>
            </div>
        </div>

        <!-- button -->
        <div class="buttons mt-10 text-center">
            <a href="/">
                <button class="blue-button w-1/4">Go back to home</button>
            </a>
        </div>    
    </div>
    
    <!-- Footer -->
    <footer id="footer" class="">
        <%- include ('../../partials/footer.ejs') %>
    </footer>
</body>
</html>

<script type='text/javascript'> 
// Retrieve data from server
let module = '<%= module %>';
let data = JSON.parse('<%= JSON.stringify(data) %>'.replace(/&#34;/g, '"'));
let scores = JSON.parse('<%= JSON.stringify(scores) %>'.replace(/&#34;/g, '"'));
let cat = JSON.parse('<%= JSON.stringify(cat) %>'.replace(/&#34;/g, '"'));
let originalState = null;
console.log(module);
console.log(data);
console.log(scores);


window.onload = function() {    

    showNav();

    // Make sure apex chart is imported
    if (typeof ApexCharts == 'undefined') {
        return;
    }
    
    // Questions result -> Radial chart
    for (q in scores.qScores) {
        let qScore =  scores.qScores[q];
        let label = qScore.label
        let scorePercent = parseInt(qScore.score/qScore.maxScore * 100)
        insertRadialChart(`rb-${q}`, cat[label]['label'], cat[label]['color'], cat[label]['color2'], '180px', '50%', '#ffffff', scorePercent)
    }

    // Module result -> Progress bar
    let mScore = scores.mScore.label
    let mScorePercentage = scores.mScore.score/scores.mScore.maxScore*100
    
    // Progress chart
    let pbCont = document.getElementById('pb')
    pbCont.appendChild(createProgressChart(mScorePercentage, `Your are ${cat[mScore]['label']}`, 1/3*100, 1/3*100, 1/3*100))

    // Print
    const printButton = document.getElementById('print-button');
    printButton.addEventListener('click', function() {  
        // Apply styles for print
        const originalDisplayStyle = document.body.style.display;
        document.body.style.display = 'block';

        // Trigger print dialog
        tidyUpPage();
        window.print();

        // Ensure that the printing operation is completed before restoring the original state
        setTimeout(() => {
            restoreOriginalState();
        }, 1000); // You might need to adjust the delay based on the printing duration

        // Restore original styles after printing
        document.body.style.display = originalDisplayStyle;
        });
}

function storeOriginalState() {
    originalState = {
        navElement: document.querySelector('nav').cloneNode(true),
        buttons: Array.from(document.querySelectorAll('button')).map(element => element.cloneNode(true)),
        footerDiv: document.getElementById('footer').cloneNode(true)
    };
}

function tidyUpPage() {

    // Store the original state if it hasn't been stored yet
    if (!originalState) {
        storeOriginalState();
    }

    console.log(originalState)

    // Remove the <nav> element and its contents from the DOM
    const navElement = document.querySelector('nav');
    if (navElement) {
        navElement.classList.remove('nav-show');
    }

    // Remove all buttons
    const buttons = document.querySelectorAll('button');
    buttons.forEach(button => {
        button.remove();
    });
    
    // Remove  styles from #footer element
    const footerDiv = document.getElementById('footer');
    footerDiv.removeAttribute('style');
    footerDiv.removeAttribute('class');
    removeStylesAndClassesRecursively(footerDiv);
}

function removeStylesAndClassesRecursively(element) {
    element.removeAttribute('style');
    element.removeAttribute('class');
    element.childNodes.forEach(child => {
        if (child.nodeType === 1) {
            removeStylesAndClassesRecursively(child);
        }
    });
}

function restoreOriginalState() {
    if (originalState) {
        // Restore <nav> element
        const currentNavElement = document.querySelector('nav');
        currentNavElement.classList.add('nav-show');

        // Restore buttons
        const buttonsContainer = document.createElement('div');
        originalState.buttons.forEach(button => {
            buttonsContainer.appendChild(button);
        });
        // Add the restored buttons back to the DOM where they were removed initially

        // Restore styles to #footer element
        const currentFooterDiv = document.getElementById('footer');
        currentFooterDiv.parentNode.replaceChild(originalState.footerDiv, currentFooterDiv);

        // Reset original state after restoring
        originalState = null;
    }
}
</script>
